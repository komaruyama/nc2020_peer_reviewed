\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\citation{Minsky1967}
\citation{McClung2006}
\citation{EvansPhD}
\citation{AdChGoHu2001,RothemundWinfree2000}
\citation{MasudaSekiUbukata2018}
\citation{BrChDoKaSe2013}
\citation{GeMeScSe2019}
\citation{GearyRothemundAndersen2014}
\citation{GeMeScSe2019}
\citation{MasudaSekiUbukata2018}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}{section.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces RNA origami. RNA polymerase enzyme (orange) synthesizes the temporal copy (blue) of a gene (gray spiral) out of ribonucleotides of four types A, C, G, and U.}}{1}{figure.1}}
\newlabel{fig:rna_origami}{{1}{1}{RNA origami. RNA polymerase enzyme (orange) synthesizes the temporal copy (blue) of a gene (gray spiral) out of ribonucleotides of four types A, C, G, and U}{figure.1}{}}
\citation{GeMeScSe2018}
\citation{PchelinaSSU2020}
\citation{GearyAndersen2014}
\citation{MasudaSekiUbukata2018}
\@writefile{toc}{\contentsline {section}{\numberline {2}Preliminaries}{2}{section.2}}
\newlabel{sect:preliminaries}{{2}{2}{Preliminaries}{section.2}{}}
\citation{GeMeScSe2018}
\citation{DemaineHOPRSST2018,ElonenBachelor2016,GeMeScSe2018,HanKim2018,PchelinaSSU2020}
\citation{GeMeScSe2019}
\citation{MasudaSekiUbukata2018}
\newlabel{eq:OS_CF}{{1}{3}{Preliminaries}{equation.2.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Folding an infinite binary counter}{3}{section.3}}
\newlabel{sect:detail}{{3}{3}{Folding an infinite binary counter}{section.3}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}General idea}{3}{subsection.3.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Folding of a glider motif by a delay-3 deterministic oritatami system.}}{4}{figure.2}}
\newlabel{fig:glider}{{2}{4}{Folding of a glider motif by a delay-3 deterministic oritatami system}{figure.2}{}}
\@writefile{toc}{\contentsline {paragraph}{Seed and Encoding.}{4}{section*.1}}
\newlabel{eq:zagencoding}{{2}{4}{Seed and Encoding}{equation.3.2}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Brick level overview}{4}{subsection.3.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}Increment of the counter}{4}{subsection.3.3}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces A brick automaton of the proposed infinite binary counter. 9 possible ways of folding the first several beads of a module being transcribed are enumerated at the bottom with labels t, b, \dots  , and transitions in the brick automaton are labeled with a corresponding way of folding.}}{5}{figure.3}}
\newlabel{fig:brickautomaton}{{3}{5}{A brick automaton of the proposed infinite binary counter. 9 possible ways of folding the first several beads of a module being transcribed are enumerated at the bottom with labels t, b, \dots , and transitions in the brick automaton are labeled with a corresponding way of folding}{figure.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces All the four bricks of module F: The two bricks at the top, \texttt  {Fnt} and \texttt  {Fnb}, are for zigs while the others, \texttt  {F0} and \texttt  {F1}, are for zags. \texttt  {Fnb} binds to the zag above so weakly that it can fold even in the absence of such a zag, that is, at an overflow. }}{6}{figure.4}}
\newlabel{fig:formatters}{{4}{6}{All the four bricks of module F: The two bricks at the top, \texttt {Fnt} and \texttt {Fnb}, are for zigs while the others, \texttt {F0} and \texttt {F1}, are for zags. \texttt {Fnb} binds to the zag above so weakly that it can fold even in the absence of such a zag, that is, at an overflow}{figure.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces All the five bricks of module L: \texttt  {Lt}, \texttt  {Lbn}, \texttt  {Lcrn}, \texttt  {Lcre}, and \texttt  {Lbe} from top left to bottom right. In zigs, L folds into either \texttt  {Lt} or \texttt  {Lbn} depending on where it starts, until the transcript reaches the left end, where L folds either into \texttt  {Lcrn} if the current count has not been overflowed, or into \texttt  {Lbe} at an overflow. In the case of overflow, the next L folds into \texttt  {Lcre}. In zags, L always folds into \texttt  {Lbn}.}}{6}{figure.5}}
\newlabel{fig:leftturns}{{5}{6}{All the five bricks of module L: \texttt {Lt}, \texttt {Lbn}, \texttt {Lcrn}, \texttt {Lcre}, and \texttt {Lbe} from top left to bottom right. In zigs, L folds into either \texttt {Lt} or \texttt {Lbn} depending on where it starts, until the transcript reaches the left end, where L folds either into \texttt {Lcrn} if the current count has not been overflowed, or into \texttt {Lbe} at an overflow. In the case of overflow, the next L folds into \texttt {Lcre}. In zags, L always folds into \texttt {Lbn}}{figure.5}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces All the six bricks of module H: \texttt  {H00}, \texttt  {H01}, \texttt  {He1}, \texttt  {H10}, \texttt  {H11}, and \texttt  {Hn} from top left to bottom right. In zags, H always folds into \texttt  {Hn} while in zigs, it folds into one of the other five bricks.}}{6}{figure.6}}
\newlabel{fig:halfadders}{{6}{6}{All the six bricks of module H: \texttt {H00}, \texttt {H01}, \texttt {He1}, \texttt {H10}, \texttt {H11}, and \texttt {Hn} from top left to bottom right. In zags, H always folds into \texttt {Hn} while in zigs, it folds into one of the other five bricks}{figure.6}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces All the three bricks of module R: \texttt  {Rt}, \texttt  {Rb}, and \texttt  {Rcr}. In zigs, R folds into \texttt  {Rt} or \texttt  {Rb}, depending on how high it starts. In zags, R always folds into \texttt  {Rb} until the transcript reaches the right end, where R folds into \texttt  {Rcr} due to the four beads (boxed). \texttt  {Rcr} is provided with this Turn Signal for the next right carriage-return. Note that \texttt  {Rb} is not bonded to the environment at all. That is, this module certainly folds into \texttt  {Rb} at an overflow. }}{6}{figure.7}}
\newlabel{fig:rightturns}{{7}{6}{All the three bricks of module R: \texttt {Rt}, \texttt {Rb}, and \texttt {Rcr}. In zigs, R folds into \texttt {Rt} or \texttt {Rb}, depending on how high it starts. In zags, R always folds into \texttt {Rb} until the transcript reaches the right end, where R folds into \texttt {Rcr} due to the four beads (boxed). \texttt {Rcr} is provided with this Turn Signal for the next right carriage-return. Note that \texttt {Rb} is not bonded to the environment at all. That is, this module certainly folds into \texttt {Rb} at an overflow}{figure.7}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}Bit-width expansion at an overflow}{6}{subsection.3.4}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces  The first zig. 0 is encoded as an initial count below the seed in the format \textup  {\hbox {\mathsurround \z@ \normalfont  (\ignorespaces \ref  {eq:zagencoding}\unskip \@@italiccorr )}} with $k = 1$ (1-bit width). Being fed with carry, the zig increments the count. Module H outputs 1, or more precisely a sequence of bead types which shall be interpreted as 1 in the next zag and reformatted, as a sum and cancels the carry. }}{7}{figure.8}}
\newlabel{fig:counter1stzig}{{8}{7}{The first zig. 0 is encoded as an initial count below the seed in the format \eqref {eq:zagencoding} with $k = 1$ (1-bit width). Being fed with carry, the zig increments the count. Module H outputs 1, or more precisely a sequence of bead types which shall be interpreted as 1 in the next zag and reformatted, as a sum and cancels the carry}{figure.8}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces  The first zag. A Turn Signal at the left end of the seed makes module L folds into the brick Lcrn to turn and initiate the zag. This brick is equipped with another Turn Signal for the sake of the next turn. In a zag, module F reads the output of module H from above and formats it for the sake of the next zig. }}{7}{figure.9}}
\newlabel{fig:counter1stzag}{{9}{7}{The first zag. A Turn Signal at the left end of the seed makes module L folds into the brick Lcrn to turn and initiate the zag. This brick is equipped with another Turn Signal for the sake of the next turn. In a zag, module F reads the output of module H from above and formats it for the sake of the next zig}{figure.9}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces  Overflow. When the carry has not been canceled out until the end of a zig, the Turn Signal is too far for the upcoming module, which is L, to be folded into the brick Lcrn for turn. }}{7}{figure.10}}
\newlabel{fig:overflowex1}{{10}{7}{Overflow. When the carry has not been canceled out until the end of a zig, the Turn Signal is too far for the upcoming module, which is L, to be folded into the brick Lcrn for turn}{figure.10}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5}Formatting}{7}{subsection.3.5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.6}Rule set}{7}{subsection.3.6}}
\newlabel{subsect:ruleset}{{3.6}{7}{Rule set}{subsection.3.6}{}}
\newlabel{table:rule}{{3.6}{7}{Rule set}{subsection.3.6}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces  (Left) Starting from the bottom, the Turn Signal above is too far for this L to fold into \texttt  {Lcrn}. It rather folds into \texttt  {Lbe} and initiates bit expansion. (Right) Without anything around, the succeeding H folds into a glider (brick \texttt  {He1}). }}{8}{figure.11}}
\newlabel{fig:overflowex2-3}{{11}{8}{(Left) Starting from the bottom, the Turn Signal above is too far for this L to fold into \texttt {Lcrn}. It rather folds into \texttt {Lbe} and initiates bit expansion. (Right) Without anything around, the succeeding H folds into a glider (brick \texttt {He1})}{figure.11}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces  The succeeding R and F also fold into respective glider-like bricks. (Left) This brick of F (\texttt  {Fnb}) exposes Turn Signal \texttt  {28}{-}\texttt  {27}{-}\texttt  {22} (boxed), which is usually ``hidden" under the previous zag. (Right) The exposed \texttt  {28}{-}\texttt  {27}{-}\texttt  {22} (boxed) triggers the folding of next L into a special brick (\texttt  {Lcre}) for left carriage-return. }}{8}{figure.12}}
\newlabel{fig:overflowex4}{{12}{8}{The succeeding R and F also fold into respective glider-like bricks. (Left) This brick of F (\texttt {Fnb}) exposes Turn Signal \texttt {28}{-}\texttt {27}{-}\texttt {22} (boxed), which is usually ``hidden" under the previous zag. (Right) The exposed \texttt {28}{-}\texttt {27}{-}\texttt {22} (boxed) triggers the folding of next L into a special brick (\texttt {Lcre}) for left carriage-return}{figure.12}{}}
\citation{HanKim2019,OtaSeki2017}
\bibstyle{splncs03}
\bibdata{nc2020}
\bibcite{AdChGoHu2001}{1}
\bibcite{BrChDoKaSe2013}{2}
\bibcite{DemaineHOPRSST2018}{3}
\bibcite{ElonenBachelor2016}{4}
\bibcite{EvansPhD}{5}
\bibcite{GearyAndersen2014}{6}
\bibcite{GeMeScSe2018}{7}
\bibcite{GeMeScSe2019}{8}
\bibcite{GearyRothemundAndersen2014}{9}
\bibcite{HanKim2018}{10}
\bibcite{HanKim2019}{11}
\bibcite{MasudaSekiUbukata2018}{12}
\bibcite{McClung2006}{13}
\bibcite{Minsky1967}{14}
\bibcite{OtaSeki2017}{15}
\bibcite{PchelinaSSU2020}{16}
\bibcite{RothemundWinfree2000}{17}
\@writefile{lof}{\contentsline {figure}{\numberline {13}{\ignorespaces Counting from a non-coding seed. (Left) The simplest-possible seed that consists only of the boxed right Turn Signal. (Right) Starting from this non-coding seed, the first period results in the count 1 in the 1-bit. }}{9}{figure.13}}
\newlabel{fig:noncoding_seed}{{13}{9}{Counting from a non-coding seed. (Left) The simplest-possible seed that consists only of the boxed right Turn Signal. (Right) Starting from this non-coding seed, the first period results in the count 1 in the 1-bit}{figure.13}{}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Conclusion}{9}{section.4}}
\newlabel{sect:discussion}{{4}{9}{Conclusion}{section.4}{}}
